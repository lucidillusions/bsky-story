# .github/workflows/update_bluesky_status.yml

name: Update Bluesky Status (Debugging)

on:
  schedule:
    - cron: '0 */3 * * *'
  workflow_dispatch:

jobs:
  update_data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.0' # Use a Ruby version compatible with your Jekyll setup (e.g., 3.2, 3.3)
          bundler-cache: true # Installs gems from Gemfile.lock

      - name: Debug: List files before Jekyll build
        run: |
          echo "Files in current directory before build:"
          ls -F
          echo "Files in _data/ before build:"
          ls -F _data/ || true # Use || true so it doesn't fail if _data is empty

      - name: Run Jekyll to generate data file
        run: |
          bundle exec jekyll build --source . --destination _site_temp
        env:
          JEKYLL_ENV: production

      - name: Debug: List files after Jekyll build
        run: |
          echo "Files in current directory after build:"
          ls -F
          echo "Files in _data/ after build:"
          ls -F _data/ || true # Use || true so it doesn't fail if _data is empty
          echo "Files in _site_temp/ after build:"
          ls -F _site_temp/ || true # Check temp build directory too

      - name: Debug: Check content of _data/bluesky_latest_post.yml if it exists
        run: |
          if [ -f "_data/bluesky_latest_post.yml" ]; then
            echo "Content of _data/bluesky_latest_post.yml:"
            cat _data/bluesky_latest_post.yml
          else
            echo "_data/bluesky_latest_post.yml does NOT exist after build."
          fi

      - name: Stage changes for commit (including potential new file)
        run: |
          git add _data/bluesky_latest_post.yml
        # Temporarily remove continue-on-error to force a fail here if file missing,
        # so we get a clear error message. We expect it to fail here.

      - name: Check if there are changes to commit
        id: git_status_check
        run: |
          if ! git diff --cached --quiet; then
            echo "file_status=changed" >> $GITHUB_OUTPUT
            echo "Changes detected in _data/bluesky_latest_post.yml."
          else
            echo "file_status=no_change" >> $GITHUB_OUTPUT
            echo "No changes detected in _data/bluesky_latest_post.yml."
          fi
        shell: bash

      - name: Commit and push changes
        if: steps.git_status_check.outputs.file_status == 'changed'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -m "Automated: Update Bluesky status from latest post"
          git push
